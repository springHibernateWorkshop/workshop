# This workflow will starts with a testing job using Java 17 and then build a Java project with Maven.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
      runs-on: ubuntu-latest       
      name: Run unit tests on Java 17
      steps:
        - uses: actions/checkout@v2
        - name: Setup java
          uses: actions/setup-java@v1
          with:
            java-version: 17
        - run: mvn -f pom.xml clean test
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install -DskriptTests
  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-docker@v3

    - name: Build and Push Docker Image
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker build -t your-dockerhub-username/workshop:latest .
        docker push your-dockerhub-username/workshop:latest

    - name: Deploy to Docker Compose
      run: docker-compose up -d


    
